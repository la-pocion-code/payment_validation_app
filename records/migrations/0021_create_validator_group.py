# Generated by Django 5.2.5

from django.db import migrations
from django.contrib.auth.management import create_permissions

def create_validator_group(apps, schema_editor):
    # Re-creamos la lógica para asegurar que los permisos existan
    app_config = apps.get_app_config('records')
    app_config.models_module = True
    create_permissions(app_config, verbosity=0)
    app_config.models_module = None

    Group = apps.get_model('auth', 'Group')
    Permission = apps.get_model('auth', 'Permission')
    ContentType = apps.get_model('contenttypes', 'ContentType')
    FinancialRecord = apps.get_model('records', 'FinancialRecord')

    db_alias = schema_editor.connection.alias

    # Obtenemos el "content type" del modelo FinancialRecord
    financial_record_content_type = ContentType.objects.db_manager(db_alias).get_for_model(FinancialRecord)

    # Permisos necesarios: ver y cambiar
    change_perm = Permission.objects.using(db_alias).get(
        codename='change_financialrecord',
        content_type=financial_record_content_type
    )
    view_perm = Permission.objects.using(db_alias).get(
        codename='view_financialrecord',
        content_type=financial_record_content_type
    )

    # Crear el grupo "Validador" y asignarle los permisos
    validador_group, created = Group.objects.using(db_alias).get_or_create(name='Validador')
    if created:
        validador_group.permissions.add(change_perm, view_perm)

class Migration(migrations.Migration):

    dependencies = [
        # Asegúrate que esta dependencia apunte a tu última migración de la app 'records'
        ('records', '0020_financialrecord_payment_status_and_more'),
    ]

    operations = [
        migrations.RunPython(create_validator_group),
    ]
