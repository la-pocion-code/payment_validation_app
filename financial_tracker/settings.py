"""
Django settings for financial_tracker project.

Generated by 'django-admin startproject' using Django 5.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import os
import dj_database_url
from decouple import config


from decouple import config

print("üß™ DEBUG INFO - Variables desde decouple:")

# Lista de variables que quieres inspeccionar
for var in [
    "DEBUG",
    "DATABASE_URL",
    "SECRET_KEY",
    "ALLOWED_HOSTS",
    "AWS_ACCESS_KEY_ID",
    "AWS_SECRET_ACCESS_KEY",
    "AWS_STORAGE_BUCKET_NAME",
    "EMAIL_HOST",
    "EMAIL_HOST_USER",
    "EMAIL_HOST_PASSWORD",
]:
    try:
        value = config(var)
        print(f"‚úÖ {var} = {value}")
    except Exception as e:
        print(f"‚ö†Ô∏è  {var} no est√° definida: {e}")


# from dotenv import load_dotenv

# load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "=x7717-3(_!9)36i%g22$3k75bme3dcfxx2nru71(hvz=j$l%1"

DEBUG = True

ALLOWED_HOSTS = ['localhost','127.0.0.1','localhost','web-production-6b4c.up.railway.app']



# # SECURITY WARNING: don't run with debug turned on in production!
# DEBUG = os.environ.get("DEBUG", "False") == "True"

# # Configuraci√≥n de ALLOWED_HOSTS m√°s robusta
# ALLOWED_HOSTS = []
# if os.environ.get("ALLOWED_HOSTS"):
#     ALLOWED_HOSTS = [host.strip() for host in os.environ.get("ALLOWED_HOSTS").split(",") if host.strip()]
# elif DEBUG:
#     ALLOWED_HOSTS = ['localhost', '127.0.0.1', 'web-production-6b4c.up.railway.app']

# # Para Railway espec√≠ficamente
# if os.environ.get("RAILWAY_ENVIRONMENT"):
#     ALLOWED_HOSTS.append("*.railway.app")
#     ALLOWED_HOSTS.append("*.up.railway.app")

# Application definition
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'whitenoise.runserver_nostatic',
    'records',
    'social_django',
    'simple_history',
    'django_filters',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',  # A√±adido para archivos est√°ticos
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'simple_history.middleware.HistoryRequestMiddleware',
]

ROOT_URLCONF = 'financial_tracker.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'social_django.context_processors.backends',
                'social_django.context_processors.login_redirect',
                'records.context_processors.duplicate_attempts_count',
                'records.context_processors.pending_requests_count',
            ],
        },
    },
]

WSGI_APPLICATION = 'financial_tracker.wsgi.application'

# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

# Configuraci√≥n de base de datos m√°s robusta
DATABASE_URL = os.environ.get('DATABASE_URL')
print("DATABASE_URL:", os.getenv("DATABASE_URL"))
print("DATABASE_URL:", os.environ.get("DATABASE_URL"))



DATABASES = {
    'default': dj_database_url.config(default=os.getenv('DATABASE_URL'))
}



# if DATABASE_URL:
#     DATABASES = {
#         'default': dj_database_url.config(
#             default=DATABASE_URL,
#             conn_max_age=600,
#             conn_health_checks=True,
#         )
#     }
# else:
#     # Fallback para desarrollo local
#     DATABASES = {
#         'default': {
#             'ENGINE': 'django.db.backends.sqlite3',
#             'NAME': BASE_DIR / 'db.sqlite3',
#         }
#     }

# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'America/Bogota'
USE_I18N = True
USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

# Aseg√∫rate de que solo haya una ubicaci√≥n para archivos est√°ticos
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'records', 'static'),
]

# Configuraci√≥n mejorada para evitar duplicados
STATICFILES_FINDERS = [
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
]

# Configuraci√≥n para WhiteNoise (servir archivos est√°ticos en producci√≥n)
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Configuraci√≥n de autenticaci√≥n social
AUTHENTICATION_BACKENDS = (
    'social_core.backends.google.GoogleOAuth2',
    'django.contrib.auth.backends.ModelBackend',
)

LOGIN_URL = 'login'
LOGIN_REDIRECT_URL = '/'
LOGOUT_REDIRECT_URL = 'login'
SOCIAL_AUTH_LOGIN_ERROR_URL = 'login'
SOCIAL_AUTH_BACKEND_ERROR_URL = 'login'

SOCIAL_AUTH_PIPELINE = (
    'social_core.pipeline.social_auth.social_details',
    'social_core.pipeline.social_auth.social_uid',
    'social_core.pipeline.social_auth.auth_allowed',
    'social_core.pipeline.social_auth.social_user',
    'records.pipeline.require_email_domain',
    'social_core.pipeline.user.get_username',
    'social_core.pipeline.user.create_user',
    'records.pipeline.set_superuser_flag',
    'social_core.pipeline.social_auth.associate_user',
    'social_core.pipeline.social_auth.load_extra_data',
    'social_core.pipeline.user.user_details',
)

print("SOCIAL_AUTH_GOOGLE_OAUTH2_KEY:", os.getenv("SOCIAL_AUTH_GOOGLE_OAUTH2_KEY"))
print("SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET:", os.getenv("SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET"))
print("SICIAL_AUTH_PIPELINE:", os.environ.get("SOCIAL_AUTH_GOOGLE_OAUTH2_KEY"))
print("SOCIAL_AUTH_BACKEND_ERROR_URL:", os.environ.get("SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET"))



SOCIAL_AUTH_GOOGLE_OAUTH2_KEY = os.getenv('SOCIAL_AUTH_GOOGLE_OAUTH2_KEY')
SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET = os.getenv('SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET')

ADMIN_EMAILS = ['jcorrea@lapocion.com', 'venriquez@lapocion.com', 'wcastro@lapocion.com']

# Session timeout settings
SESSION_COOKIE_AGE = 3600  # 1 hour in seconds
SESSION_SAVE_EVERY_REQUEST = True

# Configuraciones de seguridad para producci√≥n
if not DEBUG:
    SECURE_BROWSER_XSS_FILTER = True
    SECURE_CONTENT_TYPE_NOSNIFF = True
    SECURE_HSTS_INCLUDE_SUBDOMAINS = True
    SECURE_HSTS_SECONDS = 3600
    SECURE_REDIRECT_EXEMPT = []
    SECURE_SSL_REDIRECT = True
    SESSION_COOKIE_SECURE = True
    CSRF_COOKIE_SECURE = True

# Logging para debugging (solo en desarrollo)
if DEBUG:
    LOGGING = {
        'version': 1,
        'disable_existing_loggers': False,
        'handlers': {
            'console': {
                'class': 'logging.StreamHandler',
            },
        },
        'root': {
            'handlers': ['console'],
            'level': 'INFO',
        },
    }



CSRF_TRUSTED_ORIGINS = ['http://*','https://web-production-6b4c.up.railway.app']